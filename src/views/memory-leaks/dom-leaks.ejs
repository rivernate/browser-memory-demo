<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>DOM Leaks Memory Leak</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .container {
            margin: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .description {
            text-align: left;
            max-width: 600px;
        }
        pre {
            background-color: #f1f1f1;
            padding: 10px;
            border-radius: 4px;
            overflow: auto;
            max-width: 600px;
        }
        .heap-size {
            margin-top: 20px;
            font-size: 18px;
        }
        button {
            margin: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>DOM Leaks Memory Leak</h1>
        <div class="description">
            <p><strong>Explanation:</strong> A DOM leak occurs when references to DOM elements are retained even after those elements have been removed from the document. This can prevent garbage collection and lead to increased memory usage.</p>
            <p><strong>Example Code:</strong></p>
            <pre>
let elements = [];

function createAndRemoveElements() {
    for (let i = 0; i < 1000; i++) {
        const element = document.createElement('div');
        document.body.appendChild(element);
        elements.push(element); // Reference is kept
        document.body.removeChild(element); // Removed from DOM
    }
}
            </pre>
        </div>
        <button id="start-button">Start Leak</button>
        <div id="output"></div>
        <div id="heap-size" class="heap-size">Heap Size: N/A</div>
    </div>
    <script src="/js/dom-leaks.js"></script>
</body>
</html>

