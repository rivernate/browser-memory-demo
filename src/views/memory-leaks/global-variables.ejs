<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Global Variables Memory Leak</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .container {
      margin: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .description {
      text-align: left;
      max-width: 600px;
    }

    pre {
      background-color: #f1f1f1;
      padding: 10px;
      border-radius: 4px;
      overflow: auto;
      max-width: 600px;
    }

    .heap-size {
      margin-top: 20px;
      font-size: 18px;
    }

    button {
      margin: 5px;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Global Variables Memory Leak</h1>
    <div class="description">
      <p><strong>Explanation:</strong> A global variable leak occurs when variables are unintentionally assigned to the
        global scope. These variables persist for the life of the application and are not garbage collected, leading to
        increased memory usage.</p>
      <p><strong>Example Code:</strong></p>
      <pre>
        function addItems() {
        leakArray = []; // Oops! This creates a global variable.
        for (let i = 0; i < 1000; i++) { leakArray.push(new Array(1000).fill('leak')); } } </pre>
    </div>
    <button id="start-button">Start Leak</button>
    <div id="output"></div>
    <div id="heap-size" class="heap-size">Heap Size: N/A</div>
  </div>
  <script src="/js/global-variables.js"></script>
</body>

</html>
